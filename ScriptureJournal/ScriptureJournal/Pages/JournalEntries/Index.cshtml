@page
@model ScriptureJournal.Pages.JournalEntries.IndexModel

@{
    ViewData["Title"] = "All Entries";
}

<h2>All Entries</h2>

<div id="createNewLink">
    <p>
        <a asp-page="Create">Create New Entry</a>
    </p>
</div>

<div id="searchForm">
    <form>
        <p>
            Book:
            <select asp-for="ScriptureBook" asp-items="Model.Books">
                <option value="">All</option>
            </select>
            Notes Contain: <input type="text" asp-for="SearchString" />
            <input type="submit" value="Search" />
            <a asp-page="./Index">Reset</a>
        </p>
    </form>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.BookSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.JournalEntry[0].Book)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JournalEntry[0].Chapter)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JournalEntry[0].Verse)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JournalEntry[0].Notes)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.JournalEntry[0].DateAdded)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.JournalEntry)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Book)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Chapter)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Verse)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateAdded)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.JournalEntry.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.JournalEntry.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.JournalEntry.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.JournalEntry.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @nextDisabled">
    Next
</a>